{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "4N7FsxcC7ONr"
   },
   "source": [
    "# Исследование рынка\n",
    "\n",
    "Для открытия кафе в г. Москва неободимо провести исследование рынка. Источником данных для исследования являются открытые данные из сети интернет о заведениях общественного питания в г Москве. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "executionInfo": {
     "elapsed": 391,
     "status": "ok",
     "timestamp": 1655538494563,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "J62kVAz36FJU"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "executionInfo": {
     "elapsed": 145,
     "status": "ok",
     "timestamp": 1655538495163,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "smDQOdJB8OhI"
   },
   "outputs": [],
   "source": [
    "try:\n",
    "  rest = pd.read_csv('/content/drive/MyDrive/Data/rest_data.csv')\n",
    "except:\n",
    "  rest = pd.read_csv('/datasets/rest_data.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hCbN-bvaqZiu"
   },
   "source": [
    "## Предобработка данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 476
    },
    "executionInfo": {
     "elapsed": 142,
     "status": "ok",
     "timestamp": 1655538495167,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "jUW3lw6j8xDq",
    "outputId": "4c8ac9a7-d58d-4955-b9ea-858e789ebdae"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 15366 entries, 0 to 15365\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   id           15366 non-null  int64 \n",
      " 1   object_name  15366 non-null  object\n",
      " 2   chain        15366 non-null  object\n",
      " 3   object_type  15366 non-null  object\n",
      " 4   address      15366 non-null  object\n",
      " 5   number       15366 non-null  int64 \n",
      "dtypes: int64(2), object(4)\n",
      "memory usage: 720.4+ KB\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>151635</td>\n",
       "      <td>СМЕТАНА</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Егора Абакумова, дом 9</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24309</td>\n",
       "      <td>Кафе «Академия»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абельмановская улица, дом 6</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21894</td>\n",
       "      <td>ПИЦЦЕТОРИЯ</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 1</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>119365</td>\n",
       "      <td>Кафе «Вишневая метель»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 9, корпус 1</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id             object_name chain object_type  \\\n",
       "0  151635                 СМЕТАНА   нет        кафе   \n",
       "1   77874                  Родник   нет        кафе   \n",
       "2   24309         Кафе «Академия»   нет        кафе   \n",
       "3   21894              ПИЦЦЕТОРИЯ    да        кафе   \n",
       "4  119365  Кафе «Вишневая метель»   нет        кафе   \n",
       "\n",
       "                                             address  number  \n",
       "0         город Москва, улица Егора Абакумова, дом 9      48  \n",
       "1  город Москва, улица Талалихина, дом 2/1, корпус 1      35  \n",
       "2          город Москва, Абельмановская улица, дом 6      95  \n",
       "3            город Москва, Абрамцевская улица, дом 1      40  \n",
       "4  город Москва, Абрамцевская улица, дом 9, корпус 1      50  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.info()\n",
    "rest.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Xyf79R4Fq1Mr"
   },
   "source": [
    "В данных нет пропусков, тип данных в файле корректный."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 123,
     "status": "ok",
     "timestamp": 1655538495172,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "qn3FDeqH9VYB",
    "outputId": "d1aa7a8e-125f-4135-d61f-0011c9ec5585"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "82"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.loc[:, 'object_name':'number'].duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 15284 entries, 0 to 15365\n",
      "Data columns (total 6 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   id           15284 non-null  int64 \n",
      " 1   object_name  15284 non-null  object\n",
      " 2   chain        15284 non-null  object\n",
      " 3   object_type  15284 non-null  object\n",
      " 4   address      15284 non-null  object\n",
      " 5   number       15284 non-null  int64 \n",
      "dtypes: int64(2), object(4)\n",
      "memory usage: 835.8+ KB\n"
     ]
    }
   ],
   "source": [
    "rest = rest.drop_duplicates(['object_name','chain','object_type', 'address','number'])\n",
    "rest.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 105,
     "status": "ok",
     "timestamp": 1655538495176,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "uhRI_KL9BbN-",
    "outputId": "30c228f4-0e1c-4a7d-9690-f0e532b1f3e4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Столовая                             267\n",
       "Шаурма                               226\n",
       "Кафе                                 222\n",
       "KFC                                  155\n",
       "Шоколадница                          142\n",
       "                                    ... \n",
       "Столовая Гимназии № 1576 корпус 4      1\n",
       "Столовая МВД РФ (закрытое)             1\n",
       "Шаурма-шашлык                          1\n",
       "Столовая «Текстильная Академия»        1\n",
       "Ресторан «БЕТА»                        1\n",
       "Name: object_name, Length: 10393, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest['object_name'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "DW1fiJorrKOG"
   },
   "source": [
    "В данных обнаружены дубликаты, для анализа удалим повторяющиеся строки. Наименования есть повторяющиеся. Возможно  это сетевые заведения или пункты общественного питания без названия, например \"Столовая\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 92,
     "status": "ok",
     "timestamp": 1655538495181,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "YHUiqUh97mfI",
    "outputId": "8b1cfa3b-c377-4779-b6eb-fa3033ecbc03"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    15284.000000\n",
       "mean        59.784350\n",
       "std         74.838657\n",
       "min          0.000000\n",
       "25%         14.000000\n",
       "50%         40.000000\n",
       "75%         80.000000\n",
       "max       1700.000000\n",
       "Name: number, dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest['number'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 125
    },
    "executionInfo": {
     "elapsed": 76,
     "status": "ok",
     "timestamp": 1655538495185,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "bxfvEY5ED8hC",
    "outputId": "3aaa3e87-c34c-4a0e-9c94-76a533486876"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12723</th>\n",
       "      <td>199696</td>\n",
       "      <td>Arena by Soho Family</td>\n",
       "      <td>нет</td>\n",
       "      <td>бар</td>\n",
       "      <td>город Москва, Кутузовский проспект, дом 36, ст...</td>\n",
       "      <td>1700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           id           object_name chain object_type  \\\n",
       "12723  199696  Arena by Soho Family   нет         бар   \n",
       "\n",
       "                                                 address  number  \n",
       "12723  город Москва, Кутузовский проспект, дом 36, ст...    1700  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.query('number == 1700')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 337
    },
    "executionInfo": {
     "elapsed": 597,
     "status": "ok",
     "timestamp": 1655538495716,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "6GA7RZhRsKY0",
    "outputId": "8130421b-92cc-4a05-a419-deec1444636d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>115498</td>\n",
       "      <td>Пекарня &amp; Донер</td>\n",
       "      <td>нет</td>\n",
       "      <td>закусочная</td>\n",
       "      <td>город Москва, Бутырская улица, дом 9, корпус 2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>152556</td>\n",
       "      <td>Шаурма в пите</td>\n",
       "      <td>нет</td>\n",
       "      <td>предприятие быстрого обслуживания</td>\n",
       "      <td>город Москва, Варшавское шоссе, дом 72, корпус 2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>149568</td>\n",
       "      <td>Суши</td>\n",
       "      <td>нет</td>\n",
       "      <td>предприятие быстрого обслуживания</td>\n",
       "      <td>город Москва, улица Маршала Василевского, дом ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>126956</td>\n",
       "      <td>Шаурма, куры-гриль</td>\n",
       "      <td>нет</td>\n",
       "      <td>предприятие быстрого обслуживания</td>\n",
       "      <td>город Москва, 1-я Владимирская улица, дом 21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>149531</td>\n",
       "      <td>Шаурма, куры-гриль</td>\n",
       "      <td>нет</td>\n",
       "      <td>предприятие быстрого обслуживания</td>\n",
       "      <td>город Москва, 2-я Владимирская улица, дом 44/10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         id         object_name chain                        object_type  \\\n",
       "137  115498     Пекарня & Донер   нет                         закусочная   \n",
       "154  152556       Шаурма в пите   нет  предприятие быстрого обслуживания   \n",
       "157  149568                Суши   нет  предприятие быстрого обслуживания   \n",
       "190  126956  Шаурма, куры-гриль   нет  предприятие быстрого обслуживания   \n",
       "195  149531  Шаурма, куры-гриль   нет  предприятие быстрого обслуживания   \n",
       "\n",
       "                                               address  number  \n",
       "137     город Москва, Бутырская улица, дом 9, корпус 2       0  \n",
       "154   город Москва, Варшавское шоссе, дом 72, корпус 2       0  \n",
       "157  город Москва, улица Маршала Василевского, дом ...       0  \n",
       "190       город Москва, 1-я Владимирская улица, дом 21       0  \n",
       "195    город Москва, 2-я Владимирская улица, дом 44/10       0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.query('number == 0').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 363
    },
    "executionInfo": {
     "elapsed": 73,
     "status": "ok",
     "timestamp": 1655538495720,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "ZbW2ydgBD0Jh",
    "outputId": "53d1c43b-9ace-4846-8538-a4e19121a0db"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>object_type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>бар</th>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>буфет</th>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>закусочная</th>\n",
       "      <td>182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>кафе</th>\n",
       "      <td>306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>кафетерий</th>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>магазин (отдел кулинарии)</th>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>предприятие быстрого обслуживания</th>\n",
       "      <td>690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ресторан</th>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>столовая</th>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    id\n",
       "object_type                           \n",
       "бар                                 28\n",
       "буфет                               64\n",
       "закусочная                         182\n",
       "кафе                               306\n",
       "кафетерий                          111\n",
       "магазин (отдел кулинарии)          145\n",
       "предприятие быстрого обслуживания  690\n",
       "ресторан                            44\n",
       "столовая                            19"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.query('number == 0').groupby('object_type').agg({'id':'count'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "executionInfo": {
     "elapsed": 66,
     "status": "ok",
     "timestamp": 1655538495724,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "uo37BIKPtXvo",
    "outputId": "00974aa1-de3e-4625-abcc-3cfe69152659",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>object_name</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>BOKKER</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CoffeeShop</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KFC</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Marmalato</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Porto-Pomodoro</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shvilli (реторан Швили)</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>БУРГЕР РУС</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Бургер Кинг</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ВАЙТ ВОТЕРС ХОСПИТАЛИТИ ПАРТНЕРС</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ГолдПицца</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Гриль Хаус</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Гришаев В.В</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Дамаскина К.А</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Дейли Шеф</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Кофе</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Крошка Картошка</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>МАКДОНАЛДС</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>МАКСИМАЛЬНЫЙ РЕСТОРАН</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>МИЛТИ</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Макдоналдс</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Мартиросян М.Г.</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Пице Хат</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ресторан «Суши Make»</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ресторан «Хинкальная»</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ресторан Ай дабаран</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Суши Сет</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Теремок-Инвест</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Галичкин</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Грачева</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Рогачикова</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Салпагарова</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Шапиро</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет. Яшечкина</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет.Паритова</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Фудмаркет.Швыдкой</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  id\n",
       "object_name                         \n",
       "BOKKER                             1\n",
       "CoffeeShop                         1\n",
       "KFC                                3\n",
       "Marmalato                          1\n",
       "Porto-Pomodoro                     1\n",
       "Shvilli (реторан Швили)            1\n",
       "БУРГЕР РУС                         1\n",
       "Бургер Кинг                        4\n",
       "ВАЙТ ВОТЕРС ХОСПИТАЛИТИ ПАРТНЕРС   1\n",
       "ГолдПицца                          1\n",
       "Гриль Хаус                         1\n",
       "Гришаев В.В                        1\n",
       "Дамаскина К.А                      1\n",
       "Дейли Шеф                          1\n",
       "Кофе                               1\n",
       "Крошка Картошка                    2\n",
       "МАКДОНАЛДС                         1\n",
       "МАКСИМАЛЬНЫЙ РЕСТОРАН              1\n",
       "МИЛТИ                              1\n",
       "Макдоналдс                         4\n",
       "Мартиросян М.Г.                    1\n",
       "Пице Хат                           1\n",
       "Ресторан «Суши Make»               1\n",
       "Ресторан «Хинкальная»              1\n",
       "Ресторан Ай дабаран                1\n",
       "Суши Сет                           1\n",
       "Теремок-Инвест                     1\n",
       "Фудмаркет. Галичкин                1\n",
       "Фудмаркет. Грачева                 1\n",
       "Фудмаркет. Рогачикова              1\n",
       "Фудмаркет. Салпагарова             1\n",
       "Фудмаркет. Шапиро                  1\n",
       "Фудмаркет. Яшечкина                1\n",
       "Фудмаркет.Паритова                 1\n",
       "Фудмаркет.Швыдкой                  1"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.query('number == 0 and object_type == \"ресторан\"').groupby('object_name').agg({'id':'count'})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pfOSOChhrwEB"
   },
   "source": [
    "В файле содержатся данные с 0 количеством мест или 1700 мест. Заведня с 0 количством мест скорее всего это заведения работающие на вынос. Заведение с 1700 мест - это крупный ночной клуб где проводятся концерты. Думаю данные нужно оставить без именения, тк. они не выглдят ошибочными."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ab4dsXyFupWn"
   },
   "source": [
    "## Исследование объектов общественного питания"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "APEnc5erv09t"
   },
   "source": [
    "1. Проведем анализ соотношения видов объектов общественного питания по количеству заведений."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 380
    },
    "executionInfo": {
     "elapsed": 548,
     "status": "ok",
     "timestamp": 1655538496216,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "8s8kj1byyghO",
    "outputId": "3e256ca0-b26d-4453-8c9b-b3cea236f1d5"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "rest_type = rest.pivot_table(index='object_type',\n",
    "                             values='id',\n",
    "                             aggfunc='count').reset_index().sort_values(by='id')\n",
    "\n",
    "fig = plt.figure()\n",
    "fig.patch.set_facecolor('white')\n",
    "fig.patch.set_alpha(1.0)\n",
    "\n",
    "ax = fig.add_subplot(111)\n",
    "sns.barplot(data = rest_type, x='id', y='object_type',orient='h', color='#84C7A4')\n",
    "ax.patch.set_facecolor('white')\n",
    "ax.patch.set_alpha(1.0)\n",
    "plt.xlabel('Количество заведений')\n",
    "plt.ylabel('Тип заведения')\n",
    "plt.title('Количество заведений по типам')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "V3w2FiqIvJ83"
   },
   "source": [
    "Самое большое количество заведений относится к категории \"Кафе\" - около 6 тыс. Далее по количеству заведений можно выделить предприятия быстррого обслуживания, рестораны и столовые. У них доли примерно одинаковые 2-2,5 тыс.\n",
    "\n",
    "2. Исследуем соотношения сетевых и несетевых заведений по количеству."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 346
    },
    "executionInfo": {
     "elapsed": 76,
     "status": "ok",
     "timestamp": 1655538496234,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "LMcjLSN61PdM",
    "outputId": "acf51f65-8c53-42f9-d9b3-234a293c3b5f"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "rest.pivot_table(index='chain',\n",
    "                 values='id',\n",
    "                 aggfunc='count').reset_index()['id'].plot(kind='pie', \n",
    "                                                           labels=['Сетевые', 'Несетевые'],\n",
    "                                                           colors=['#0045AD', '#84C7A4'],\n",
    "                                                           autopct='%.0f%%',\n",
    "                                                           explode = (0, 0.1))\n",
    "\n",
    "\n",
    "plt.title('Соотношение сетевых и нестевых заведений')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "aSCtyxqE0lCZ"
   },
   "source": [
    "На диаграмме видно, что сетевые заведения составляют примерно 1/5 от всех заведений. 4/5 части - это несетевые заведения.\n",
    "\n",
    "3. Проверим для какого вида объекта общественного питния характерно сетевое распространение. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 380
    },
    "executionInfo": {
     "elapsed": 71,
     "status": "ok",
     "timestamp": 1655538496239,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "OdOy89w14-GI",
    "outputId": "972a1dd9-3467-4856-cbe3-6c80ba211766"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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Rw+ef/556urqePHFF5clZwCPPvoodXV1SOLkk0/mwAMPXK6/qVOn8sc//hGAt99+m2effdbJlpmZmbUs22+//bKEJi8iOPPMMznxxBOb1E+59jNnzlw2s/Xee+9RX1/P4MGDAdh9990ZPXo0c+bMoXfv3gwcOHC5/q644gr222+/VT+4tYSv2TIzM2vB9t57bxYvXszw4cOXlU2dOpVOnTpx4403smBB9tnKr7zyCm+++WbZfvbbb79G26+77rq0adOG+fPnL1fesWNH2rZty9KlS5fr75prruHDDz8E4D//+Q8LFy78ZAfbQnlmy8zMbDVqykc1rE6SuOuuuzjllFP45S9/SU1NDbW1tVx22WV06dKFAQMGANChQwduvvlmNtpoo5L9DBo0iOnTp6/Qvk2bNsuWERcvXsy+++5L3759GTt2LP/85z/ZbbfdWLhwIaeeeiodO3Zc1t8JJ5zAzJkz2WmnnYgIunXrxt13313x8WiOFOEPqzZrTurr62PiRH9PtVlLMX36dLbddttqh9GqlBpzSZMior5KITXIy4hmZmZmFeRky8zMzKyCnGyZmZmZVZCTLTMzM7MKcrJlZmZmVkFOtszMzMwqyJ+zZdbMvLZwHheMG1ntMMxWyVn9j652CFW3up+/TRnTDh06LPswUoARI0YwceJErrzyytUai60az2yZmZmZVZCTLTMzs7XY7Nmz+epXv0q/fv3o168fjz32GJB90fRxxx3HDjvsQN++fbnjjjuA7AukBwwYwE477cThhx/OggULuPXWW6mrq6Nnz5507tyZuro6vvSlL5VtD1BbW8sOO+xA7969GTRo0LKv6unQocMKMfbp04eZM2cCcPPNN7PLLrtQV1fHiSeeuNxXALVUTrbMzMxauPfff5+6urplP+ecc86yuu9///uceuqpTJgwgTvuuIMTTjgBgJ/97Gd07tyZadOmMXXqVPbee2/mzJnD+eefz/3338/jjz9OfX09v/71rzniiCOYPHky119/PbvvvjuTJ0/mnnvuKdu+4KGHHuKpp57ijTfe4Pnnn2/0OKZPn86tt97KY489xuTJk2nTpg0jR7b8yyp8zZaZmVkL1759eyZPnrzsfuGaLYD777+fp59+elndO++8w4IFC7j//vu55ZZblpWvv/76jB49mqeffppdd90VgA8++GDZdyWWMm7cuAbb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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rest.pivot_table(index='object_type',\n",
    "                 columns='chain',\n",
    "                 values='id',\n",
    "                 aggfunc='count').reset_index().sort_values(\n",
    "                     by='да').rename(columns={'да':'Сетевые',\n",
    "                                              'нет':'Несетевые'}).plot(kind='barh',\n",
    "                                                                       x='object_type',\n",
    "                                                                       color=['#0045AD', '#84C7A4'])\n",
    "\n",
    "plt.xlabel('Количество')\n",
    "plt.ylabel('Тип')\n",
    "plt.title('Количество сетевых/несетевых заведений по видам объектов')\n",
    "plt.legend()\n",
    "plt.show()                                                                          "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "jJo1GbiFG8LP"
   },
   "source": [
    "На диаграмме мы видим что самое большое количество сетевых заведений относится к категории \"Кафе\". Таже большая доля заведений относятся к категориям \"Предприятие быстрого обслуживания\" и \"Ресторан\".\n",
    "\n",
    "4. Определим что харатерно для сетевых заведений: много заведений с небольшим количеством посадочных мест или мало заведений с большим количеством. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 417
    },
    "executionInfo": {
     "elapsed": 465,
     "status": "ok",
     "timestamp": 1655538496645,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "k6v8iBx9EzQN",
    "outputId": "7b9ca417-e2c5-4111-a092-965299b5c6bc"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Распределение объектов общественного питания в зависимости от количества посадочных мест')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "chain = rest.query('chain == \"да\"').groupby('object_name').agg({'id':'count', \n",
    "                                                                'number':'median'}).reset_index()\n",
    "\n",
    "\n",
    "plt.scatter(data=chain.query('id != 1'), \n",
    "                             y='number', \n",
    "                             x='id',\n",
    "                             color='#84C7A4')\n",
    "plt.xlabel('Количество заведений')\n",
    "plt.ylabel('Медианное количество посадочных мест')\n",
    "plt.title('Распределение объектов общественного питания в зависимости от количества посадочных мест')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "__tfSNIdHTqM"
   },
   "source": [
    "На графике видно что в основном сетвые заведения \n",
    "представлены не более 20 шт с 0-150 посадочных мест. Думаю можно сказать что преобладают заведения с большим количеством посадочных мест и небольшим количеством заведений в сети.\n",
    "\n",
    "5. Для каждого вида объекта общественного питания опишем среднее количество посадочных мест. Какой вид предоставляет в среднем самое большое количество посадочных мест?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 397
    },
    "executionInfo": {
     "elapsed": 602,
     "status": "ok",
     "timestamp": 1655538497221,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "iWkFv1PCIkse",
    "outputId": "1caf6cdb-8189-4b5b-fbc5-783a5f3c83d3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Среднее количество посадочных мест')"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rest_mean = rest.groupby('object_type').agg({'number':'mean'}).sort_values(by='number').reset_index()\n",
    "sns.barplot(data=rest_mean, y='object_type', x='number', orient='h', color='#84C7A4')\n",
    "plt.xlabel('Среднее число посадочных мест')\n",
    "plt.ylabel('Тип заведения общественного питания')\n",
    "plt.title('Среднее количество посадочных мест')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kxXm6zRnLKdb"
   },
   "source": [
    "На диаграмме мы видим что самое большое среднее количество посадочных мест у завдений типа \"Столовая\"\n",
    "\n",
    "6. Построим график топ-10 улиц по количеству объектов общественного питания и найдем соответствующие районы Москвы. Для этого создадим столбец с наимеванием улицы, и найдем район, воспользовавшись данными в интернете."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 337
    },
    "executionInfo": {
     "elapsed": 66,
     "status": "ok",
     "timestamp": 1655538497225,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "beBk_zSBK3r8",
    "outputId": "d0c31c61-161f-4291-b180-dfce1d6c7232"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "      <th>street</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>151635</td>\n",
       "      <td>СМЕТАНА</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Егора Абакумова, дом 9</td>\n",
       "      <td>48</td>\n",
       "      <td>улица Егора Абакумова</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "      <td>улица Талалихина</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24309</td>\n",
       "      <td>Кафе «Академия»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абельмановская улица, дом 6</td>\n",
       "      <td>95</td>\n",
       "      <td>Абельмановская улица</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21894</td>\n",
       "      <td>ПИЦЦЕТОРИЯ</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 1</td>\n",
       "      <td>40</td>\n",
       "      <td>Абрамцевская улица</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>119365</td>\n",
       "      <td>Кафе «Вишневая метель»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 9, корпус 1</td>\n",
       "      <td>50</td>\n",
       "      <td>Абрамцевская улица</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id             object_name chain object_type  \\\n",
       "0  151635                 СМЕТАНА   нет        кафе   \n",
       "1   77874                  Родник   нет        кафе   \n",
       "2   24309         Кафе «Академия»   нет        кафе   \n",
       "3   21894              ПИЦЦЕТОРИЯ    да        кафе   \n",
       "4  119365  Кафе «Вишневая метель»   нет        кафе   \n",
       "\n",
       "                                             address  number  \\\n",
       "0         город Москва, улица Егора Абакумова, дом 9      48   \n",
       "1  город Москва, улица Талалихина, дом 2/1, корпус 1      35   \n",
       "2          город Москва, Абельмановская улица, дом 6      95   \n",
       "3            город Москва, Абрамцевская улица, дом 1      40   \n",
       "4  город Москва, Абрамцевская улица, дом 9, корпус 1      50   \n",
       "\n",
       "                  street  \n",
       "0  улица Егора Абакумова  \n",
       "1       улица Талалихина  \n",
       "2   Абельмановская улица  \n",
       "3     Абрамцевская улица  \n",
       "4     Абрамцевская улица  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "words = ['улица','ул','переулок','шоссе','проспект','площадь','проезд',\n",
    "         'село','аллея','бульвар','набережная','тупик','линия']\n",
    "\n",
    "str_pat = r\".*,\\s*\\b([^,]*?(?:{})\\b[^,]*)[,$]+\".format(\"|\".join(words))\n",
    "\n",
    "rest['street'] = rest['address'].str.extract(str_pat)\n",
    "rest.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 63,
     "status": "ok",
     "timestamp": 1655538497229,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "L4uEZSQPdqjP",
    "outputId": "2ab9e345-b6e8-489f-fe5d-5cb631c642aa",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 15284 entries, 0 to 15365\n",
      "Data columns (total 7 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   id           15284 non-null  int64 \n",
      " 1   object_name  15284 non-null  object\n",
      " 2   chain        15284 non-null  object\n",
      " 3   object_type  15284 non-null  object\n",
      " 4   address      15284 non-null  object\n",
      " 5   number       15284 non-null  int64 \n",
      " 6   street       14831 non-null  object\n",
      "dtypes: int64(2), object(5)\n",
      "memory usage: 955.2+ KB\n"
     ]
    }
   ],
   "source": [
    "rest.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "2Bl1YTCXMdsG"
   },
   "source": [
    "Наименование улицы заполнилось не во всех строках датасета, т.к. некоторые адреса не содержат улицу."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 10036,
     "status": "ok",
     "timestamp": 1655538507225,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "WEk5GtnAlJUQ",
    "outputId": "b308ebee-d957-4c9d-9a39-6cb4174d03d4",
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "url = 'https://drive.google.com/file/d/1H451WN4By_yMUV1Yzv-d0hC6_8NsRmZY/view?usp=drivesdk'\n",
    "path = 'https://drive.google.com/uc?exort=download&id='+url.split('/')[-2]\n",
    "district = pd.read_csv(path).rename(columns={'район':'district',\n",
    "                                            'улица':'street'}).drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 15284 entries, 0 to 15365\n",
      "Data columns (total 7 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   id           15284 non-null  int64 \n",
      " 1   object_name  15284 non-null  object\n",
      " 2   chain        15284 non-null  object\n",
      " 3   object_type  15284 non-null  object\n",
      " 4   address      15284 non-null  object\n",
      " 5   number       15284 non-null  int64 \n",
      " 6   street       14831 non-null  object\n",
      "dtypes: int64(2), object(5)\n",
      "memory usage: 955.2+ KB\n"
     ]
    }
   ],
   "source": [
    "rest.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 380
    },
    "executionInfo": {
     "elapsed": 99,
     "status": "ok",
     "timestamp": 1655538507267,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "GekjEIjgoVuH",
    "outputId": "310c4212-7b4a-4849-c3fe-d31af2b769e4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "top10 = rest.pivot_table(index=['street'],\n",
    "                 values='id',\n",
    "                 aggfunc='count').reset_index().sort_values(by='id', \n",
    "                                                            ascending=False).head(10)\n",
    "top10.plot(kind='barh', x='street', color='#84C7A4')\n",
    "                                                                                          \n",
    "plt.xlabel('Количeство объектов')\n",
    "plt.ylabel('Топ 10 улиц')\n",
    "plt.title('Топ-10 улиц с самым большим количеством зведений')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "DfSEjuVtySqE"
   },
   "source": [
    "На диаграмме показаны 10 улиц с самым большим количеством заведений. На первом месте проспект Мира."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "executionInfo": {
     "elapsed": 485,
     "status": "ok",
     "timestamp": 1655538507672,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "fuyvaSWWp0Lw"
   },
   "outputs": [],
   "source": [
    "district_street = top10.merge(district,\n",
    "                             on='street', how='left')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 363
    },
    "executionInfo": {
     "elapsed": 132,
     "status": "ok",
     "timestamp": 1655538507677,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "20aInEnDkfn4",
    "outputId": "a5c8744b-636e-4c42-aed3-e57798b0ac00",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>district</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Академический</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Коньково</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Обручевский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Теплый Стан</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Черемушки</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>Ясенево</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Ленинградский проспект</td>\n",
       "      <td>Аэропорт</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Ленинградский проспект</td>\n",
       "      <td>Беговой</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Ленинградский проспект</td>\n",
       "      <td>Сокол</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Ленинградский проспект</td>\n",
       "      <td>Хорошевский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Пресненская набережная</td>\n",
       "      <td>Пресненский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Донской</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Нагатино-Садовники</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Нагорный</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Новомосковский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Северное Бутово</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Чертаново Северное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Чертаново Центральное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Чертаново Южное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>Южное Бутово</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Гагаринский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Донской</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Ломоносовский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Обручевский</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Проспект Вернадского</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Теплый Стан</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Тропарево-Никулино</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>Якиманка</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>проспект Вернадского</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Кутузовский проспект</td>\n",
       "      <td>Дорогомилово</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Кутузовский проспект</td>\n",
       "      <td>Фили-Давыдково</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Каширское шоссе</td>\n",
       "      <td>Москворечье-Сабурово</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Каширское шоссе</td>\n",
       "      <td>Нагатино-Садовники</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Каширское шоссе</td>\n",
       "      <td>Орехово-Борисово Северное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Каширское шоссе</td>\n",
       "      <td>Орехово-Борисово Южное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Кировоградская улица</td>\n",
       "      <td>Чертаново Северное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Кировоградская улица</td>\n",
       "      <td>Чертаново Центральное</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Кировоградская улица</td>\n",
       "      <td>Чертаново Южное</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    street                   district\n",
       "0            проспект Мира                        NaN\n",
       "1        Профсоюзная улица              Академический\n",
       "2        Профсоюзная улица                   Коньково\n",
       "3        Профсоюзная улица                Обручевский\n",
       "4        Профсоюзная улица                Теплый Стан\n",
       "5        Профсоюзная улица                  Черемушки\n",
       "6        Профсоюзная улица                    Ясенево\n",
       "7   Ленинградский проспект                   Аэропорт\n",
       "8   Ленинградский проспект                    Беговой\n",
       "9   Ленинградский проспект                      Сокол\n",
       "10  Ленинградский проспект                Хорошевский\n",
       "11  Пресненская набережная                Пресненский\n",
       "12        Варшавское шоссе                    Донской\n",
       "13        Варшавское шоссе         Нагатино-Садовники\n",
       "14        Варшавское шоссе                   Нагорный\n",
       "15        Варшавское шоссе             Новомосковский\n",
       "16        Варшавское шоссе            Северное Бутово\n",
       "17        Варшавское шоссе         Чертаново Северное\n",
       "18        Варшавское шоссе      Чертаново Центральное\n",
       "19        Варшавское шоссе            Чертаново Южное\n",
       "20        Варшавское шоссе               Южное Бутово\n",
       "21      Ленинский проспект                Гагаринский\n",
       "22      Ленинский проспект                    Донской\n",
       "23      Ленинский проспект              Ломоносовский\n",
       "24      Ленинский проспект                Обручевский\n",
       "25      Ленинский проспект       Проспект Вернадского\n",
       "26      Ленинский проспект                Теплый Стан\n",
       "27      Ленинский проспект         Тропарево-Никулино\n",
       "28      Ленинский проспект                   Якиманка\n",
       "29    проспект Вернадского                        NaN\n",
       "30    Кутузовский проспект               Дорогомилово\n",
       "31    Кутузовский проспект             Фили-Давыдково\n",
       "32         Каширское шоссе       Москворечье-Сабурово\n",
       "33         Каширское шоссе         Нагатино-Садовники\n",
       "34         Каширское шоссе  Орехово-Борисово Северное\n",
       "35         Каширское шоссе     Орехово-Борисово Южное\n",
       "36    Кировоградская улица         Чертаново Северное\n",
       "37    Кировоградская улица      Чертаново Центральное\n",
       "38    Кировоградская улица            Чертаново Южное"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "district_street[['street', 'district']].drop_duplicates()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "O2KhlD4YPCZY"
   },
   "source": [
    "7. Найдем число улиц с одним объектом общественного питания и определим в каких районах Москвы находятся эти улицы."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "executionInfo": {
     "elapsed": 120,
     "status": "ok",
     "timestamp": 1655538507681,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "owR9jYKViCoZ",
    "outputId": "18c09f3d-2f16-40b5-d6f1-a4288654e0eb"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "551"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest.groupby('street').agg({'id':'count'}).reset_index().query('id == 1')['street'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 708
    },
    "executionInfo": {
     "elapsed": 94,
     "status": "ok",
     "timestamp": 1655538507685,
     "user": {
      "displayName": "Таня Яковлева",
      "userId": "13485763811818083048"
     },
     "user_tz": -180
    },
    "id": "KrLUPDNXqQ4m",
    "outputId": "39ac75c8-727b-40ff-c2cc-399f27e85c27",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>district</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Троицкий</th>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Новомосковский</th>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Хамовники</th>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Таганский</th>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Басманный</th>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Арбат</th>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Пресненский</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Мещанский</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Замоскворечье</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Якиманка</th>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Красносельский</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Марьина Роща</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Лефортово</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Внуково</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Даниловский</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Сокольники</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Аэропорт</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Нижегородский</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Соколиная Гора</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Лосиноостровский</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  street\n",
       "district                \n",
       "Троицкий              50\n",
       "Новомосковский        48\n",
       "Хамовники             24\n",
       "Таганский             24\n",
       "Басманный             23\n",
       "Арбат                 17\n",
       "Пресненский           14\n",
       "Мещанский             14\n",
       "Замоскворечье         12\n",
       "Якиманка              11\n",
       "Красносельский        10\n",
       "Марьина Роща          10\n",
       "Лефортово             10\n",
       "Внуково                9\n",
       "Даниловский            9\n",
       "Сокольники             9\n",
       "Аэропорт               8\n",
       "Нижегородский          7\n",
       "Соколиная Гора         7\n",
       "Лосиноостровский       7"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "low_quantity = rest.pivot_table(index='street',\n",
    "                 values='id',\n",
    "                 aggfunc='count').reset_index().query('id == 1').drop_duplicates()\n",
    "low_quantity.merge(district, on='street', how='left').groupby('district').agg({'street':'count'}).sort_values(by='street',\n",
    "                                                                     ascending=False).head(20)\n",
    "                                                                                          "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "tosOjluUP_3O"
   },
   "source": [
    "## Выводы\n",
    "\n",
    "\n",
    "Проведен анализ рынка заведеий общественного питания в г. Москва. Анализ проводился на основании данных из открытых источников в сети интернет.\n",
    "Анализ показал что самое большое количество заведений относится к категории \"Кафе\" - около 6 тыс. Далее по количеству заведений можно выделить предприятия быстррого обслуживания, рестораны и столовые. У них доли примерно одинаковые 2-2,5 тыс.Сетевые заведения составляют примерно 1/5 от всех заведений. 4/5 части - это несетевые заведения. Сетвые заведения представлены не более 20 шт с 0-150 посадочных мест. Можно сказать что преобладают заведения с большим количеством посадочных мест и небольшим количеством заведений в сети. Самое большое среднее количество посадочных мест у завдений типа \"Столовая\" - около 120.\n",
    "\n",
    "Исходя из полученных данных, можно сделать вывод что для открытия кафе с роботами лучше всего выбрать типа \"Кафе\". При выборе места избегать улицы, входящие в 1 десятку улиц по количеству заведений общественного питания. Районы стоит рассматривать из списка районов с наименьшим количеством кафе, но для выбора приоритетного района данных недостаточно. Необходимо оценить проходимость в этих районах.\n",
    "\n",
    "Вцелом, для оценки окупаемости инвестиций стоит дополнительно проанализировать проходимость улиц и районов, а также сравнить финансовые результаты заведений.\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "xEsbCv0zw_D6"
   },
   "source": [
    "Презентация: <https://drive.google.com/file/d/1p_4uiwrZh39xMQn_BIbXchL8Tov9Vith/view?usp=drivesdk>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 1242,
    "start_time": "2022-06-18T16:17:36.425Z"
   },
   {
    "duration": 260,
    "start_time": "2022-06-18T16:17:37.669Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-18T16:17:37.930Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-18T16:17:37.955Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-18T16:17:37.975Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-18T16:17:37.986Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-18T16:17:37.999Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-18T16:17:38.010Z"
   },
   {
    "duration": 38,
    "start_time": "2022-06-18T16:17:38.022Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T16:17:38.062Z"
   },
   {
    "duration": 185,
    "start_time": "2022-06-18T16:17:38.075Z"
   },
   {
    "duration": 87,
    "start_time": "2022-06-18T16:17:38.261Z"
   },
   {
    "duration": 210,
    "start_time": "2022-06-18T16:17:38.349Z"
   },
   {
    "duration": 181,
    "start_time": "2022-06-18T16:17:38.560Z"
   },
   {
    "duration": 180,
    "start_time": "2022-06-18T16:17:38.742Z"
   },
   {
    "duration": 87,
    "start_time": "2022-06-18T16:17:38.924Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T16:17:39.013Z"
   },
   {
    "duration": 123,
    "start_time": "2022-06-18T16:17:39.028Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.153Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.154Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.155Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.158Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.159Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T16:17:39.160Z"
   },
   {
    "duration": 47,
    "start_time": "2022-06-18T18:02:37.651Z"
   },
   {
    "duration": 1360,
    "start_time": "2022-06-18T18:02:45.099Z"
   },
   {
    "duration": 244,
    "start_time": "2022-06-18T18:02:46.461Z"
   },
   {
    "duration": 35,
    "start_time": "2022-06-18T18:02:46.707Z"
   },
   {
    "duration": 7,
    "start_time": "2022-06-18T18:02:46.744Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:02:46.753Z"
   },
   {
    "duration": 9,
    "start_time": "2022-06-18T18:02:46.769Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-18T18:02:46.780Z"
   },
   {
    "duration": 46,
    "start_time": "2022-06-18T18:02:46.793Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-18T18:02:46.840Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:02:46.855Z"
   },
   {
    "duration": 199,
    "start_time": "2022-06-18T18:02:46.871Z"
   },
   {
    "duration": 117,
    "start_time": "2022-06-18T18:02:47.072Z"
   },
   {
    "duration": 210,
    "start_time": "2022-06-18T18:02:47.191Z"
   },
   {
    "duration": 195,
    "start_time": "2022-06-18T18:02:47.402Z"
   },
   {
    "duration": 208,
    "start_time": "2022-06-18T18:02:47.599Z"
   },
   {
    "duration": 108,
    "start_time": "2022-06-18T18:02:47.809Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-18T18:02:47.919Z"
   },
   {
    "duration": 118,
    "start_time": "2022-06-18T18:02:47.949Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.068Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.070Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.071Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.072Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.073Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:02:48.074Z"
   },
   {
    "duration": 24,
    "start_time": "2022-06-18T18:03:48.782Z"
   },
   {
    "duration": 17,
    "start_time": "2022-06-18T18:10:47.292Z"
   },
   {
    "duration": 40,
    "start_time": "2022-06-18T18:11:24.114Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-18T18:11:51.038Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-18T18:12:17.546Z"
   },
   {
    "duration": 47,
    "start_time": "2022-06-18T18:17:20.902Z"
   },
   {
    "duration": 199,
    "start_time": "2022-06-18T18:18:59.869Z"
   },
   {
    "duration": 50,
    "start_time": "2022-06-18T18:19:34.571Z"
   },
   {
    "duration": 40,
    "start_time": "2022-06-18T18:20:07.662Z"
   },
   {
    "duration": 45,
    "start_time": "2022-06-18T18:20:17.117Z"
   },
   {
    "duration": 45,
    "start_time": "2022-06-18T18:20:48.648Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-18T18:21:49.642Z"
   },
   {
    "duration": 41,
    "start_time": "2022-06-18T18:22:22.730Z"
   },
   {
    "duration": 1144,
    "start_time": "2022-06-18T18:22:55.351Z"
   },
   {
    "duration": 74,
    "start_time": "2022-06-18T18:22:56.497Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-18T18:22:56.573Z"
   },
   {
    "duration": 47,
    "start_time": "2022-06-18T18:22:56.601Z"
   },
   {
    "duration": 30,
    "start_time": "2022-06-18T18:22:56.650Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T18:22:56.683Z"
   },
   {
    "duration": 34,
    "start_time": "2022-06-18T18:22:56.697Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-18T18:22:56.733Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-18T18:22:56.751Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T18:22:56.764Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-18T18:22:56.779Z"
   },
   {
    "duration": 220,
    "start_time": "2022-06-18T18:22:56.799Z"
   },
   {
    "duration": 111,
    "start_time": "2022-06-18T18:22:57.023Z"
   },
   {
    "duration": 211,
    "start_time": "2022-06-18T18:22:57.136Z"
   },
   {
    "duration": 213,
    "start_time": "2022-06-18T18:22:57.349Z"
   },
   {
    "duration": 222,
    "start_time": "2022-06-18T18:22:57.564Z"
   },
   {
    "duration": 92,
    "start_time": "2022-06-18T18:22:57.787Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-18T18:22:57.881Z"
   },
   {
    "duration": 135,
    "start_time": "2022-06-18T18:22:57.898Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.038Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.038Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.039Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.042Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.043Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:22:58.044Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-18T18:23:34.663Z"
   },
   {
    "duration": 4,
    "start_time": "2022-06-18T18:23:44.640Z"
   },
   {
    "duration": 68,
    "start_time": "2022-06-18T18:23:44.646Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-18T18:23:44.716Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-18T18:23:44.743Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-18T18:23:44.768Z"
   },
   {
    "duration": 48,
    "start_time": "2022-06-18T18:23:44.791Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T18:23:44.843Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:23:44.857Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:23:44.873Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-18T18:23:44.889Z"
   },
   {
    "duration": 38,
    "start_time": "2022-06-18T18:23:44.903Z"
   },
   {
    "duration": 203,
    "start_time": "2022-06-18T18:23:44.944Z"
   },
   {
    "duration": 131,
    "start_time": "2022-06-18T18:23:45.149Z"
   },
   {
    "duration": 315,
    "start_time": "2022-06-18T18:23:45.282Z"
   },
   {
    "duration": 258,
    "start_time": "2022-06-18T18:23:45.599Z"
   },
   {
    "duration": 238,
    "start_time": "2022-06-18T18:23:45.858Z"
   },
   {
    "duration": 102,
    "start_time": "2022-06-18T18:23:46.098Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-18T18:23:46.202Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-18T18:23:46.240Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.269Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.270Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.272Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.273Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.275Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:23:46.276Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-18T18:24:16.984Z"
   },
   {
    "duration": 30,
    "start_time": "2022-06-18T18:24:26.000Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-18T18:36:21.116Z"
   },
   {
    "duration": 3,
    "start_time": "2022-06-18T18:37:15.163Z"
   },
   {
    "duration": 71,
    "start_time": "2022-06-18T18:37:15.178Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-18T18:37:15.251Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-18T18:37:15.275Z"
   },
   {
    "duration": 44,
    "start_time": "2022-06-18T18:37:15.297Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:15.343Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:15.345Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:15.346Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:15.348Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:15.350Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:37:15.352Z"
   },
   {
    "duration": 260,
    "start_time": "2022-06-18T18:37:15.367Z"
   },
   {
    "duration": 111,
    "start_time": "2022-06-18T18:37:15.636Z"
   },
   {
    "duration": 229,
    "start_time": "2022-06-18T18:37:15.749Z"
   },
   {
    "duration": 202,
    "start_time": "2022-06-18T18:37:15.979Z"
   },
   {
    "duration": 204,
    "start_time": "2022-06-18T18:37:16.183Z"
   },
   {
    "duration": 207,
    "start_time": "2022-06-18T18:37:16.389Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-18T18:37:16.599Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-18T18:37:16.630Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.664Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.665Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.667Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.669Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.674Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-18T18:37:16.676Z"
   },
   {
    "duration": 30,
    "start_time": "2022-06-18T18:40:32.653Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-18T18:41:20.844Z"
   },
   {
    "duration": 29,
    "start_time": "2022-06-18T18:42:46.987Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-18T18:43:34.049Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-18T18:44:01.720Z"
   },
   {
    "duration": 9,
    "start_time": "2022-06-18T18:44:32.281Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T18:49:01.869Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-18T18:49:06.186Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-18T18:49:08.668Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-18T18:49:12.456Z"
   },
   {
    "duration": 24,
    "start_time": "2022-06-18T18:49:17.755Z"
   },
   {
    "duration": 236,
    "start_time": "2022-06-18T18:49:47.279Z"
   },
   {
    "duration": 130,
    "start_time": "2022-06-18T18:50:02.252Z"
   },
   {
    "duration": 303,
    "start_time": "2022-06-18T18:50:07.757Z"
   },
   {
    "duration": 234,
    "start_time": "2022-06-18T18:50:25.900Z"
   },
   {
    "duration": 249,
    "start_time": "2022-06-18T18:51:28.983Z"
   },
   {
    "duration": 233,
    "start_time": "2022-06-18T18:52:34.053Z"
   },
   {
    "duration": 213,
    "start_time": "2022-06-18T18:53:26.167Z"
   },
   {
    "duration": 225,
    "start_time": "2022-06-18T18:54:30.046Z"
   },
   {
    "duration": 273,
    "start_time": "2022-06-18T18:55:40.007Z"
   },
   {
    "duration": 265,
    "start_time": "2022-06-18T18:57:09.220Z"
   },
   {
    "duration": 227,
    "start_time": "2022-06-18T18:57:17.120Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-18T18:57:20.297Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-18T18:57:29.709Z"
   },
   {
    "duration": 157,
    "start_time": "2022-06-18T19:10:48.963Z"
   },
   {
    "duration": 715,
    "start_time": "2022-06-18T19:12:25.613Z"
   },
   {
    "duration": 749,
    "start_time": "2022-06-18T19:12:50.147Z"
   },
   {
    "duration": 2470,
    "start_time": "2022-06-18T19:15:11.152Z"
   },
   {
    "duration": 1391,
    "start_time": "2022-06-18T19:16:24.997Z"
   },
   {
    "duration": 622,
    "start_time": "2022-06-18T19:19:12.134Z"
   },
   {
    "duration": 638,
    "start_time": "2022-06-18T19:19:43.483Z"
   },
   {
    "duration": 734,
    "start_time": "2022-06-18T19:20:46.845Z"
   },
   {
    "duration": 1494,
    "start_time": "2022-06-18T19:21:17.902Z"
   },
   {
    "duration": 1064,
    "start_time": "2022-06-18T19:22:23.148Z"
   },
   {
    "duration": 1277,
    "start_time": "2022-06-18T19:24:22.214Z"
   },
   {
    "duration": 1214,
    "start_time": "2022-06-18T19:33:40.973Z"
   },
   {
    "duration": 851,
    "start_time": "2022-06-18T19:36:16.371Z"
   },
   {
    "duration": 750,
    "start_time": "2022-06-18T19:36:33.973Z"
   },
   {
    "duration": 804,
    "start_time": "2022-06-18T19:37:44.956Z"
   },
   {
    "duration": 908,
    "start_time": "2022-06-18T19:38:30.748Z"
   },
   {
    "duration": 787,
    "start_time": "2022-06-18T19:39:09.848Z"
   },
   {
    "duration": 782,
    "start_time": "2022-06-18T19:39:45.309Z"
   },
   {
    "duration": 755,
    "start_time": "2022-06-18T19:39:55.957Z"
   },
   {
    "duration": 844,
    "start_time": "2022-06-18T19:40:15.971Z"
   },
   {
    "duration": 799,
    "start_time": "2022-06-18T19:41:05.855Z"
   },
   {
    "duration": 748,
    "start_time": "2022-06-18T19:41:24.163Z"
   },
   {
    "duration": 864,
    "start_time": "2022-06-18T19:42:45.249Z"
   },
   {
    "duration": 866,
    "start_time": "2022-06-18T19:43:26.517Z"
   },
   {
    "duration": 841,
    "start_time": "2022-06-18T20:03:34.656Z"
   },
   {
    "duration": 842,
    "start_time": "2022-06-18T20:33:02.101Z"
   },
   {
    "duration": 865,
    "start_time": "2022-06-18T20:34:36.018Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-18T20:48:21.647Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-18T20:48:36.448Z"
   },
   {
    "duration": 9,
    "start_time": "2022-06-18T20:51:45.108Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-18T20:52:00.642Z"
   },
   {
    "duration": 368,
    "start_time": "2022-06-18T20:52:13.951Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-18T20:53:13.261Z"
   },
   {
    "duration": 81,
    "start_time": "2022-06-18T20:53:55.510Z"
   },
   {
    "duration": 822,
    "start_time": "2022-06-18T20:57:55.084Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-18T20:58:20.452Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-18T20:58:41.663Z"
   },
   {
    "duration": 849,
    "start_time": "2022-06-18T20:59:00.305Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T06:40:30.696Z"
   },
   {
    "duration": 3,
    "start_time": "2022-06-19T06:40:57.992Z"
   },
   {
    "duration": 63,
    "start_time": "2022-06-19T06:40:58.002Z"
   },
   {
    "duration": 17,
    "start_time": "2022-06-19T06:40:58.067Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T06:40:58.086Z"
   },
   {
    "duration": 33,
    "start_time": "2022-06-19T06:40:58.104Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T06:40:58.139Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-19T06:40:58.151Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T06:40:58.162Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T06:40:58.182Z"
   },
   {
    "duration": 34,
    "start_time": "2022-06-19T06:40:58.196Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T06:40:58.231Z"
   },
   {
    "duration": 188,
    "start_time": "2022-06-19T06:40:58.245Z"
   },
   {
    "duration": 161,
    "start_time": "2022-06-19T06:40:58.436Z"
   },
   {
    "duration": 178,
    "start_time": "2022-06-19T06:40:58.599Z"
   },
   {
    "duration": 161,
    "start_time": "2022-06-19T06:40:58.779Z"
   },
   {
    "duration": 175,
    "start_time": "2022-06-19T06:40:58.942Z"
   },
   {
    "duration": 79,
    "start_time": "2022-06-19T06:40:59.119Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T06:40:59.200Z"
   },
   {
    "duration": 33,
    "start_time": "2022-06-19T06:40:59.230Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.266Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.267Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.268Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.269Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.270Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.272Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T06:40:59.273Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T06:41:35.091Z"
   },
   {
    "duration": 416,
    "start_time": "2022-06-19T06:43:32.036Z"
   },
   {
    "duration": 410,
    "start_time": "2022-06-19T06:43:46.820Z"
   },
   {
    "duration": 270,
    "start_time": "2022-06-19T06:45:05.917Z"
   },
   {
    "duration": 260,
    "start_time": "2022-06-19T06:46:02.057Z"
   },
   {
    "duration": 255,
    "start_time": "2022-06-19T07:09:09.469Z"
   },
   {
    "duration": 235,
    "start_time": "2022-06-19T07:10:22.964Z"
   },
   {
    "duration": 230,
    "start_time": "2022-06-19T07:11:50.095Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T07:31:41.838Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T08:10:28.831Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T09:27:36.474Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T09:27:51.162Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T09:36:43.304Z"
   },
   {
    "duration": 124,
    "start_time": "2022-06-19T11:54:37.508Z"
   },
   {
    "duration": 1417,
    "start_time": "2022-06-19T11:55:00.203Z"
   },
   {
    "duration": 494,
    "start_time": "2022-06-19T11:55:01.621Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-19T11:55:02.117Z"
   },
   {
    "duration": 42,
    "start_time": "2022-06-19T11:55:02.142Z"
   },
   {
    "duration": 32,
    "start_time": "2022-06-19T11:55:02.185Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T11:55:02.219Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T11:55:02.233Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T11:55:02.265Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T11:55:02.293Z"
   },
   {
    "duration": 37,
    "start_time": "2022-06-19T11:55:02.309Z"
   },
   {
    "duration": 39,
    "start_time": "2022-06-19T11:55:02.348Z"
   },
   {
    "duration": 223,
    "start_time": "2022-06-19T11:55:02.389Z"
   },
   {
    "duration": 109,
    "start_time": "2022-06-19T11:55:02.614Z"
   },
   {
    "duration": 223,
    "start_time": "2022-06-19T11:55:02.725Z"
   },
   {
    "duration": 221,
    "start_time": "2022-06-19T11:55:02.949Z"
   },
   {
    "duration": 190,
    "start_time": "2022-06-19T11:55:03.172Z"
   },
   {
    "duration": 123,
    "start_time": "2022-06-19T11:55:03.364Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T11:55:03.489Z"
   },
   {
    "duration": 1183,
    "start_time": "2022-06-19T11:55:03.505Z"
   },
   {
    "duration": 211,
    "start_time": "2022-06-19T11:55:04.689Z"
   },
   {
    "duration": 97,
    "start_time": "2022-06-19T11:55:04.901Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T11:55:04.999Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T11:55:05.001Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T11:55:05.002Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T11:55:05.003Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T11:55:05.004Z"
   },
   {
    "duration": 96,
    "start_time": "2022-06-19T12:00:59.150Z"
   },
   {
    "duration": 641,
    "start_time": "2022-06-19T12:01:16.527Z"
   },
   {
    "duration": 583,
    "start_time": "2022-06-19T12:02:15.473Z"
   },
   {
    "duration": 672,
    "start_time": "2022-06-19T12:02:44.210Z"
   },
   {
    "duration": 1102,
    "start_time": "2022-06-19T12:03:08.724Z"
   },
   {
    "duration": 618,
    "start_time": "2022-06-19T12:04:40.077Z"
   },
   {
    "duration": 614,
    "start_time": "2022-06-19T12:09:08.023Z"
   },
   {
    "duration": 1104,
    "start_time": "2022-06-19T12:15:24.590Z"
   },
   {
    "duration": 1908,
    "start_time": "2022-06-19T12:17:18.861Z"
   },
   {
    "duration": 857,
    "start_time": "2022-06-19T12:17:34.442Z"
   },
   {
    "duration": 998,
    "start_time": "2022-06-19T12:19:03.701Z"
   },
   {
    "duration": 1067,
    "start_time": "2022-06-19T12:19:21.562Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T12:27:40.715Z"
   },
   {
    "duration": 1249,
    "start_time": "2022-06-19T17:13:09.879Z"
   },
   {
    "duration": 250,
    "start_time": "2022-06-19T17:13:11.130Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T17:13:11.382Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T17:13:11.405Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T17:13:11.429Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T17:13:11.457Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T17:13:11.474Z"
   },
   {
    "duration": 17,
    "start_time": "2022-06-19T17:13:11.491Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T17:13:11.527Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T17:13:11.543Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T17:13:11.565Z"
   },
   {
    "duration": 227,
    "start_time": "2022-06-19T17:13:11.583Z"
   },
   {
    "duration": 99,
    "start_time": "2022-06-19T17:13:11.812Z"
   },
   {
    "duration": 202,
    "start_time": "2022-06-19T17:13:11.913Z"
   },
   {
    "duration": 184,
    "start_time": "2022-06-19T17:13:12.116Z"
   },
   {
    "duration": 199,
    "start_time": "2022-06-19T17:13:12.302Z"
   },
   {
    "duration": 87,
    "start_time": "2022-06-19T17:13:12.502Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T17:13:12.591Z"
   },
   {
    "duration": 1000,
    "start_time": "2022-06-19T17:13:12.605Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T17:13:13.608Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-19T17:13:13.638Z"
   },
   {
    "duration": 199,
    "start_time": "2022-06-19T17:13:13.662Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T17:13:13.862Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T17:13:13.883Z"
   },
   {
    "duration": 32,
    "start_time": "2022-06-19T17:13:13.896Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T17:13:13.930Z"
   },
   {
    "duration": 102,
    "start_time": "2022-06-19T18:08:30.969Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:10:44.874Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-19T18:11:16.746Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T18:16:50.468Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T18:22:03.116Z"
   },
   {
    "duration": 121,
    "start_time": "2022-06-19T18:23:11.219Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:23:21.486Z"
   },
   {
    "duration": 52,
    "start_time": "2022-06-19T18:23:33.495Z"
   },
   {
    "duration": 62,
    "start_time": "2022-06-19T18:24:47.475Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T18:25:49.600Z"
   },
   {
    "duration": 35,
    "start_time": "2022-06-19T18:26:22.346Z"
   },
   {
    "duration": 1221,
    "start_time": "2022-06-19T18:31:15.464Z"
   },
   {
    "duration": 76,
    "start_time": "2022-06-19T18:31:16.687Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T18:31:16.765Z"
   },
   {
    "duration": 42,
    "start_time": "2022-06-19T18:31:16.793Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T18:31:16.838Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T18:31:16.866Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T18:31:16.882Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T18:31:16.896Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T18:31:16.930Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:31:16.949Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T18:31:16.974Z"
   },
   {
    "duration": 203,
    "start_time": "2022-06-19T18:31:16.989Z"
   },
   {
    "duration": 124,
    "start_time": "2022-06-19T18:31:17.195Z"
   },
   {
    "duration": 222,
    "start_time": "2022-06-19T18:31:17.326Z"
   },
   {
    "duration": 190,
    "start_time": "2022-06-19T18:31:17.549Z"
   },
   {
    "duration": 225,
    "start_time": "2022-06-19T18:31:17.741Z"
   },
   {
    "duration": 109,
    "start_time": "2022-06-19T18:31:17.968Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T18:31:18.079Z"
   },
   {
    "duration": 40,
    "start_time": "2022-06-19T18:31:18.093Z"
   },
   {
    "duration": 1298,
    "start_time": "2022-06-19T18:31:18.136Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T18:31:19.436Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T18:31:19.463Z"
   },
   {
    "duration": 267,
    "start_time": "2022-06-19T18:31:19.484Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T18:31:19.753Z"
   },
   {
    "duration": 37,
    "start_time": "2022-06-19T18:31:19.768Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-19T18:31:19.807Z"
   },
   {
    "duration": 181,
    "start_time": "2022-06-19T18:31:19.842Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:31:57.195Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T18:33:46.673Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T18:34:10.928Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T18:36:28.089Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T18:38:02.715Z"
   },
   {
    "duration": 3,
    "start_time": "2022-06-19T18:38:55.377Z"
   },
   {
    "duration": 9,
    "start_time": "2022-06-19T18:39:13.885Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:42:07.020Z"
   },
   {
    "duration": 1128,
    "start_time": "2022-06-19T18:42:23.166Z"
   },
   {
    "duration": 78,
    "start_time": "2022-06-19T18:42:24.296Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T18:42:24.375Z"
   },
   {
    "duration": 30,
    "start_time": "2022-06-19T18:42:24.401Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-19T18:42:24.433Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-19T18:42:24.465Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T18:42:24.477Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T18:42:24.490Z"
   },
   {
    "duration": 43,
    "start_time": "2022-06-19T18:42:24.507Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T18:42:24.553Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T18:42:24.568Z"
   },
   {
    "duration": 209,
    "start_time": "2022-06-19T18:42:24.582Z"
   },
   {
    "duration": 110,
    "start_time": "2022-06-19T18:42:24.792Z"
   },
   {
    "duration": 218,
    "start_time": "2022-06-19T18:42:24.903Z"
   },
   {
    "duration": 186,
    "start_time": "2022-06-19T18:42:25.123Z"
   },
   {
    "duration": 205,
    "start_time": "2022-06-19T18:42:25.310Z"
   },
   {
    "duration": 99,
    "start_time": "2022-06-19T18:42:25.517Z"
   },
   {
    "duration": 32,
    "start_time": "2022-06-19T18:42:25.618Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-19T18:42:25.652Z"
   },
   {
    "duration": 1038,
    "start_time": "2022-06-19T18:42:25.684Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T18:42:26.723Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T18:42:26.752Z"
   },
   {
    "duration": 201,
    "start_time": "2022-06-19T18:42:26.781Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T18:42:26.984Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T18:42:27.004Z"
   },
   {
    "duration": 41,
    "start_time": "2022-06-19T18:42:27.032Z"
   },
   {
    "duration": 54,
    "start_time": "2022-06-19T18:42:27.074Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T18:45:14.436Z"
   },
   {
    "duration": 24,
    "start_time": "2022-06-19T18:45:36.644Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T18:45:58.180Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T18:46:20.793Z"
   },
   {
    "duration": 105,
    "start_time": "2022-06-19T18:51:07.716Z"
   },
   {
    "duration": 60,
    "start_time": "2022-06-19T18:53:27.060Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T18:53:39.689Z"
   },
   {
    "duration": 89,
    "start_time": "2022-06-19T18:54:01.490Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T18:55:28.962Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T18:55:43.853Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T18:57:04.994Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T18:57:30.960Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T18:58:23.160Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-19T18:58:45.902Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:06:23.572Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:08:15.002Z"
   },
   {
    "duration": 3,
    "start_time": "2022-06-19T19:13:12.421Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T19:15:18.294Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T19:18:29.590Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T19:23:29.059Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:23:45.552Z"
   },
   {
    "duration": 5,
    "start_time": "2022-06-19T19:31:50.571Z"
   },
   {
    "duration": 1301,
    "start_time": "2022-06-19T19:31:54.277Z"
   },
   {
    "duration": 1218,
    "start_time": "2022-06-19T19:32:11.512Z"
   },
   {
    "duration": 99,
    "start_time": "2022-06-19T19:32:12.738Z"
   },
   {
    "duration": 38,
    "start_time": "2022-06-19T19:32:12.846Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:32:12.886Z"
   },
   {
    "duration": 31,
    "start_time": "2022-06-19T19:32:12.908Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:32:12.947Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:32:12.970Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T19:32:12.991Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:32:13.005Z"
   },
   {
    "duration": 29,
    "start_time": "2022-06-19T19:32:13.020Z"
   },
   {
    "duration": 29,
    "start_time": "2022-06-19T19:32:13.056Z"
   },
   {
    "duration": 212,
    "start_time": "2022-06-19T19:32:13.087Z"
   },
   {
    "duration": 112,
    "start_time": "2022-06-19T19:32:13.300Z"
   },
   {
    "duration": 256,
    "start_time": "2022-06-19T19:32:13.414Z"
   },
   {
    "duration": 207,
    "start_time": "2022-06-19T19:32:13.672Z"
   },
   {
    "duration": 207,
    "start_time": "2022-06-19T19:32:13.882Z"
   },
   {
    "duration": 102,
    "start_time": "2022-06-19T19:32:14.090Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:32:14.193Z"
   },
   {
    "duration": 2,
    "start_time": "2022-06-19T19:32:14.208Z"
   },
   {
    "duration": 1391,
    "start_time": "2022-06-19T19:32:14.211Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:32:15.603Z"
   },
   {
    "duration": 37,
    "start_time": "2022-06-19T19:32:15.623Z"
   },
   {
    "duration": 249,
    "start_time": "2022-06-19T19:32:15.662Z"
   },
   {
    "duration": 29,
    "start_time": "2022-06-19T19:32:15.913Z"
   },
   {
    "duration": 43,
    "start_time": "2022-06-19T19:32:15.944Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:32:15.989Z"
   },
   {
    "duration": 38,
    "start_time": "2022-06-19T19:32:16.012Z"
   },
   {
    "duration": 1137,
    "start_time": "2022-06-19T19:40:49.962Z"
   },
   {
    "duration": 924,
    "start_time": "2022-06-19T19:41:00.534Z"
   },
   {
    "duration": 73,
    "start_time": "2022-06-19T19:41:07.200Z"
   },
   {
    "duration": 1521,
    "start_time": "2022-06-19T19:41:32.838Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:41:45.426Z"
   },
   {
    "duration": 1110,
    "start_time": "2022-06-19T19:42:03.542Z"
   },
   {
    "duration": 84,
    "start_time": "2022-06-19T19:42:04.654Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:42:04.743Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T19:42:04.766Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:42:04.786Z"
   },
   {
    "duration": 33,
    "start_time": "2022-06-19T19:42:04.809Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T19:42:04.843Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:42:04.860Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-19T19:42:04.873Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:42:04.887Z"
   },
   {
    "duration": 37,
    "start_time": "2022-06-19T19:42:04.900Z"
   },
   {
    "duration": 204,
    "start_time": "2022-06-19T19:42:04.939Z"
   },
   {
    "duration": 96,
    "start_time": "2022-06-19T19:42:05.145Z"
   },
   {
    "duration": 207,
    "start_time": "2022-06-19T19:42:05.243Z"
   },
   {
    "duration": 185,
    "start_time": "2022-06-19T19:42:05.452Z"
   },
   {
    "duration": 184,
    "start_time": "2022-06-19T19:42:05.640Z"
   },
   {
    "duration": 112,
    "start_time": "2022-06-19T19:42:05.827Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T19:42:05.945Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T19:42:05.961Z"
   },
   {
    "duration": 1012,
    "start_time": "2022-06-19T19:42:05.971Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T19:42:06.985Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:42:07.002Z"
   },
   {
    "duration": 205,
    "start_time": "2022-06-19T19:42:07.021Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T19:42:07.229Z"
   },
   {
    "duration": 9,
    "start_time": "2022-06-19T19:42:07.254Z"
   },
   {
    "duration": 15,
    "start_time": "2022-06-19T19:42:07.265Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T19:42:07.282Z"
   },
   {
    "duration": 809,
    "start_time": "2022-06-19T19:43:53.972Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:43:57.085Z"
   },
   {
    "duration": 170,
    "start_time": "2022-06-19T19:44:08.366Z"
   },
   {
    "duration": 1084,
    "start_time": "2022-06-19T19:44:21.955Z"
   },
   {
    "duration": 65,
    "start_time": "2022-06-19T19:44:23.041Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:44:23.108Z"
   },
   {
    "duration": 30,
    "start_time": "2022-06-19T19:44:23.130Z"
   },
   {
    "duration": 35,
    "start_time": "2022-06-19T19:44:23.161Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:44:23.198Z"
   },
   {
    "duration": 27,
    "start_time": "2022-06-19T19:44:23.212Z"
   },
   {
    "duration": 28,
    "start_time": "2022-06-19T19:44:23.241Z"
   },
   {
    "duration": 16,
    "start_time": "2022-06-19T19:44:23.270Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T19:44:23.288Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T19:44:23.316Z"
   },
   {
    "duration": 193,
    "start_time": "2022-06-19T19:44:23.343Z"
   },
   {
    "duration": 100,
    "start_time": "2022-06-19T19:44:23.538Z"
   },
   {
    "duration": 200,
    "start_time": "2022-06-19T19:44:23.639Z"
   },
   {
    "duration": 171,
    "start_time": "2022-06-19T19:44:23.840Z"
   },
   {
    "duration": 191,
    "start_time": "2022-06-19T19:44:24.013Z"
   },
   {
    "duration": 89,
    "start_time": "2022-06-19T19:44:24.206Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:44:24.297Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:44:24.311Z"
   },
   {
    "duration": 1176,
    "start_time": "2022-06-19T19:44:24.334Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:44:25.511Z"
   },
   {
    "duration": 133,
    "start_time": "2022-06-19T19:44:25.525Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T19:44:25.660Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T19:44:25.662Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T19:44:25.663Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T19:44:25.665Z"
   },
   {
    "duration": 0,
    "start_time": "2022-06-19T19:44:25.667Z"
   },
   {
    "duration": 187,
    "start_time": "2022-06-19T19:44:48.738Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:45:01.049Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T19:45:58.150Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T19:46:05.789Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:46:33.100Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T19:46:50.350Z"
   },
   {
    "duration": 7,
    "start_time": "2022-06-19T19:47:15.678Z"
   },
   {
    "duration": 12,
    "start_time": "2022-06-19T19:47:21.878Z"
   },
   {
    "duration": 1115,
    "start_time": "2022-06-19T19:50:33.327Z"
   },
   {
    "duration": 69,
    "start_time": "2022-06-19T19:50:34.444Z"
   },
   {
    "duration": 22,
    "start_time": "2022-06-19T19:50:34.514Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:50:34.537Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:50:34.558Z"
   },
   {
    "duration": 10,
    "start_time": "2022-06-19T19:50:34.581Z"
   },
   {
    "duration": 33,
    "start_time": "2022-06-19T19:50:34.593Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:50:34.629Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:50:34.641Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:50:34.655Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:50:34.670Z"
   },
   {
    "duration": 209,
    "start_time": "2022-06-19T19:50:34.684Z"
   },
   {
    "duration": 101,
    "start_time": "2022-06-19T19:50:34.895Z"
   },
   {
    "duration": 201,
    "start_time": "2022-06-19T19:50:34.998Z"
   },
   {
    "duration": 168,
    "start_time": "2022-06-19T19:50:35.201Z"
   },
   {
    "duration": 180,
    "start_time": "2022-06-19T19:50:35.370Z"
   },
   {
    "duration": 96,
    "start_time": "2022-06-19T19:50:35.552Z"
   },
   {
    "duration": 19,
    "start_time": "2022-06-19T19:50:35.650Z"
   },
   {
    "duration": 3,
    "start_time": "2022-06-19T19:50:35.671Z"
   },
   {
    "duration": 964,
    "start_time": "2022-06-19T19:50:35.676Z"
   },
   {
    "duration": 18,
    "start_time": "2022-06-19T19:50:36.645Z"
   },
   {
    "duration": 214,
    "start_time": "2022-06-19T19:50:36.665Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T19:50:36.880Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:50:36.889Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T19:50:36.904Z"
   },
   {
    "duration": 108,
    "start_time": "2022-06-19T19:50:36.932Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:50:49.196Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:51:04.071Z"
   },
   {
    "duration": 7,
    "start_time": "2022-06-19T19:51:44.099Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:51:45.701Z"
   },
   {
    "duration": 1069,
    "start_time": "2022-06-19T19:52:10.172Z"
   },
   {
    "duration": 67,
    "start_time": "2022-06-19T19:52:11.243Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T19:52:11.312Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T19:52:11.338Z"
   },
   {
    "duration": 23,
    "start_time": "2022-06-19T19:52:11.361Z"
   },
   {
    "duration": 11,
    "start_time": "2022-06-19T19:52:11.385Z"
   },
   {
    "duration": 35,
    "start_time": "2022-06-19T19:52:11.397Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:52:11.434Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T19:52:11.450Z"
   },
   {
    "duration": 20,
    "start_time": "2022-06-19T19:52:11.468Z"
   },
   {
    "duration": 47,
    "start_time": "2022-06-19T19:52:11.490Z"
   },
   {
    "duration": 254,
    "start_time": "2022-06-19T19:52:11.539Z"
   },
   {
    "duration": 96,
    "start_time": "2022-06-19T19:52:11.795Z"
   },
   {
    "duration": 198,
    "start_time": "2022-06-19T19:52:11.892Z"
   },
   {
    "duration": 171,
    "start_time": "2022-06-19T19:52:12.091Z"
   },
   {
    "duration": 190,
    "start_time": "2022-06-19T19:52:12.263Z"
   },
   {
    "duration": 92,
    "start_time": "2022-06-19T19:52:12.454Z"
   },
   {
    "duration": 13,
    "start_time": "2022-06-19T19:52:12.548Z"
   },
   {
    "duration": 6,
    "start_time": "2022-06-19T19:52:12.563Z"
   },
   {
    "duration": 1074,
    "start_time": "2022-06-19T19:52:12.571Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T19:52:13.647Z"
   },
   {
    "duration": 208,
    "start_time": "2022-06-19T19:52:13.663Z"
   },
   {
    "duration": 8,
    "start_time": "2022-06-19T19:52:13.873Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T19:52:13.882Z"
   },
   {
    "duration": 14,
    "start_time": "2022-06-19T19:52:13.897Z"
   },
   {
    "duration": 107,
    "start_time": "2022-06-19T19:52:13.927Z"
   },
   {
    "duration": 26,
    "start_time": "2022-06-19T19:53:36.629Z"
   },
   {
    "duration": 25,
    "start_time": "2022-06-19T20:08:19.037Z"
   },
   {
    "duration": 21,
    "start_time": "2022-06-19T20:09:37.117Z"
   },
   {
    "duration": 24,
    "start_time": "2022-06-19T20:09:48.354Z"
   }
  ],
  "colab": {
   "authorship_tag": "ABX9TyNPqLlu1IHu01nlA+ah1gK/",
   "collapsed_sections": [],
   "mount_file_id": "1DvU9bId2CTo0KsS7xx5heHR7EJiK8hHs",
   "name": "Рынок заведений ОП Москвы.ipynb",
   "provenance": [],
   "toc_visible": true
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
